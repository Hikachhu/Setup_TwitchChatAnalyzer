<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>